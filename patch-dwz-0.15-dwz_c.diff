--- dwz.c.orig	2025-03-27 22:48:39
+++ dwz.c	2025-03-27 22:51:10
@@ -20,10 +20,10 @@
 
 #include <assert.h>
 #include <errno.h>
-#include <error.h>
 #include <fcntl.h>
 #include <setjmp.h>
 #include <string.h>
+#include <stdarg.h>
 #include <stdbool.h>
 #include <stddef.h>
 #include <stdint.h>
@@ -36,7 +36,7 @@
 #include <sys/times.h>
 #include <sys/wait.h>
 
-#include <obstack.h>
+#include "obstack.h"
 
 #include <gelf.h>
 #include <xxhash.h>
@@ -216,6 +216,29 @@
 /* Where to longjmp on OOM.  */
 static jmp_buf oom_buf;
 
+/* error () wrapper based on the Linux manual page at
+   http://man7.org/linux/man-pages/man3/error.3.html.  */
+void
+error (int status, int errnum, const char *fmt, ...)
+{
+  va_list ap;
+
+  fprintf (stderr, "%s: ", getprogname());
+  if (fmt != NULL) {
+    va_start (ap, fmt);
+    vfprintf (stderr, fmt, ap);
+    va_end (ap);
+  }
+
+  if (errnum != 0)
+    fprintf (stderr, ": %s", strerror(errnum));
+
+  fputc ('\n', stderr);
+
+  if (status != 0)
+    exit (status);
+}
+
 /* Handle OOM situation.  If handling more than one file, we might
    just fail to handle some large file due to OOM, but could very well
    handle other smaller files after it.  */
@@ -13675,7 +13698,7 @@
   int i;
   DSO *dso = NULL;
 
-  elf = elf_begin (fd, ELF_C_READ_MMAP, NULL);
+  elf = elf_begin (fd, ELF_C_READ, NULL);
   if (elf == NULL)
     {
       error (0, 0, "cannot open ELF file: %s", elf_errmsg (-1));
@@ -13713,7 +13736,7 @@
       goto error_out;
     }
 
-  elf_flagelf (elf, ELF_C_SET, ELF_F_LAYOUT | ELF_F_PERMISSIVE);
+  elf_flagelf (elf, ELF_C_SET, ELF_F_LAYOUT);
 
   memset (dso, 0, sizeof(DSO));
   dso->elf = elf;
@@ -14210,7 +14233,7 @@
       free (shstrtab);
       return 1;
     }
-  elf_flagelf (elf, ELF_C_SET, ELF_F_LAYOUT | ELF_F_PERMISSIVE);
+  elf_flagelf (elf, ELF_C_SET, ELF_F_LAYOUT);
   for (i = 0; i < ehdr.e_phnum; ++i)
     {
       GElf_Phdr *phdr, phdr_mem;
@@ -14283,7 +14306,7 @@
 	}
     }
 
-  if (elf_update (elf, ELF_C_WRITE_MMAP) == -1)
+  if (elf_update (elf, ELF_C_WRITE) == -1)
     {
       error (0, 0, "%s: elf_update failed", dso->filename);
       unlink (file);
@@ -15902,7 +15925,7 @@
       error (0, 0, "Could not create new ELF headers");
       goto fail;
     }
-  elf_flagelf (elf, ELF_C_SET, ELF_F_LAYOUT | ELF_F_PERMISSIVE);
+  elf_flagelf (elf, ELF_C_SET, ELF_F_LAYOUT);
 
   sha1_init_ctx (&ctx);
   for (i = 0; debug_sections[i].name; i++)
@@ -15995,7 +16018,7 @@
   data->d_off = 0;
   data->d_align = 1;
 
-  if (elf_update (elf, ELF_C_WRITE_MMAP) == -1)
+  if (elf_update (elf, ELF_C_WRITE) == -1)
     {
       error (0, 0, "%s: elf_update failed", multifile);
       goto fail;
